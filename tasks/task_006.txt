# Task ID: 6
# Title: Integrate Audit Assignment Notifications
# Status: done
# Dependencies: 2, 3
# Priority: medium
# Description: Add notification triggers for audit assignment changes in audit workflows.
# Details:
Modify api.audit.assignUser mutation to trigger notifications when users are assigned to audits. In EditAuditModal.tsx and AddAuditModal.tsx, add logic to detect assignment changes and call notificationService.createAuditAssignment with appropriate parameters (assignedUserId, auditId, clientName, auditYear, createdByUserId). Ensure self-notification prevention by comparing assignedUserId with session.user.id. Add error handling to prevent notification failures from affecting the main operation.

# Test Strategy:
Test audit assignment with different scenarios. Verify notifications are created with correct data. Confirm self-assignments don't create notifications. Test error handling by simulating notification service failures.

# Subtasks:
## 1. Update api.audit.assignUser Mutation to Trigger Notifications [done]
### Dependencies: None
### Description: Modify the backend mutation responsible for assigning users to audits so that it triggers a notification event when an assignment occurs.
### Details:
In the api.audit.assignUser mutation, add logic to call notificationService.createAuditAssignment with the required parameters (assignedUserId, auditId, clientName, auditYear, createdByUserId) whenever a user is assigned to an audit. Ensure the notification trigger is only called on assignment events and not on unrelated updates.

## 2. Implement Assignment Change Detection in EditAuditModal.tsx and AddAuditModal.tsx [done]
### Dependencies: 6.1
### Description: Add logic to the audit modals to detect when the assigned user changes and prepare the necessary data for notification.
### Details:
In EditAuditModal.tsx and AddAuditModal.tsx, compare the previous and new assignedUserId values to detect assignment changes. When a change is detected, gather auditId, clientName, auditYear, assignedUserId, and createdByUserId for the notification service call.

## 3. Integrate Self-Notification Prevention Logic [done]
### Dependencies: 6.2
### Description: Ensure that notifications are not sent to the user who is performing the assignment action (self-notification prevention).
### Details:
Before calling notificationService.createAuditAssignment, compare assignedUserId with session.user.id. Only trigger the notification if they are different, thereby preventing users from receiving notifications about their own actions.

## 4. Add Robust Error Handling for Notification Failures [done]
### Dependencies: 6.3
### Description: Implement error handling to ensure that failures in the notification process do not affect the main audit assignment operation.
### Details:
Wrap the notification service call in a try-catch block or use a promise-based error handler. Log any errors or report them to an error monitoring service, but ensure that the audit assignment proceeds regardless of notification success or failure.

