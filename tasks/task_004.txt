# Task ID: 4
# Title: Implement Audit Cycle Progress and Schedule
# Status: pending
# Dependencies: 2
# Priority: high
# Description: Create the Audit Cycle Progress Bar and Upcoming Audit Schedule components.
# Details:
Implement the Audit Cycle Progress Bar using TailAdmin's progress-bar component, showing progress from last audit's reportDueDate to next due date. Create the Upcoming Audit Schedule card resembling CRM UpcomingSchedule, listing next audit milestones. Use Intl.DateTimeFormat for proper date formatting as referenced in Context7.

# Test Strategy:
Test progress bar calculations for accuracy. Verify schedule displays correct milestone dates. Check date formatting across different locales. Ensure components are responsive.

# Subtasks:
## 1. Define Data Structures for Audit Cycle and Schedule [pending]
### Dependencies: None
### Description: Design and implement TypeScript interfaces or types to represent audit cycles, milestones, and schedule data required by the progress bar and schedule card components.
### Details:
Identify all necessary fields (e.g., reportDueDate, nextDueDate, milestone names, dates) and create reusable types/interfaces. Ensure these structures support both progress calculation and schedule listing.

## 2. Fetch and Prepare Audit Data [pending]
### Dependencies: 4.1
### Description: Implement logic to retrieve audit cycle and schedule data from the backend or mock source, transforming it to match the defined data structures.
### Details:
Use API calls or mock data to obtain audit cycles and milestones. Normalize and validate the data to ensure it includes all required fields for downstream components.

## 3. Calculate Audit Progress Percentage [pending]
### Dependencies: 4.1, 4.2
### Description: Develop a utility function to compute the progress percentage based on the last audit's reportDueDate and the next due date.
### Details:
Implement a function that takes the relevant dates and calculates the elapsed percentage of the audit cycle. Ensure edge cases (e.g., missing dates, future/past cycles) are handled gracefully.

## 4. Implement Audit Cycle Progress Bar Component [pending]
### Dependencies: 4.3
### Description: Create the Audit Cycle Progress Bar using TailAdmin's progress-bar component, displaying the calculated progress and relevant date labels.
### Details:
Utilize TailAdmin's pre-built progress bar, passing in the computed percentage and customizing styles as needed. Display formatted start and end dates using Intl.DateTimeFormat.

## 5. Design Upcoming Audit Schedule Card UI [pending]
### Dependencies: None
### Description: Design the Upcoming Audit Schedule card layout to match the CRM UpcomingSchedule style, including milestone names and dates.
### Details:
Use Tailwind CSS and TailAdmin components to create a visually consistent card. Plan for dynamic rendering of milestones and responsive design.

## 6. Implement Upcoming Audit Schedule Card Component [pending]
### Dependencies: 4.2, 4.5
### Description: Build the Upcoming Audit Schedule card, listing upcoming audit milestones with properly formatted dates.
### Details:
Map over the schedule data to render each milestone. Use Intl.DateTimeFormat for date display. Ensure accessibility and mobile responsiveness.

## 7. Integrate Components and Test End-to-End [pending]
### Dependencies: 4.4, 4.6
### Description: Integrate the progress bar and schedule card into the parent dashboard or page, and perform comprehensive testing.
### Details:
Place both components in the intended layout. Test with various data scenarios to ensure correct progress calculation, date formatting, and UI responsiveness. Address any integration or edge case issues.

