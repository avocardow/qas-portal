# Task ID: 3
# Title: Enhance Client and Audit Detail Pages
# Status: done
# Dependencies: None
# Priority: high
# Description: Improve the presentation of relational data on Client and Audit detail pages to clearly display linked entities and improve usability.
# Details:
1. Optimize tRPC `client.getById` to include related entities: contacts, licenses, trustAccounts, audits
2. Optimize tRPC `audit.getById` to include tasks and assignments with user information
3. Implement tabbed interface for Client Detail page at `/clients/[clientId]` with Overview, Contacts, Licenses, Trust Accounts, Audits, and Activity tabs
4. Create tables/lists for each tab with appropriate sorting and filtering
5. Enhance Audit Detail page at `/audits/[auditId]` with core info, assigned team display, tasks table, and activity log
6. Use Shadcn/TailAdmin components consistently for cards, badges, and tables
7. Ensure responsive design works on various screen sizes

# Test Strategy:
1. Verify all relational data is correctly fetched and displayed
2. Test tab navigation preserves state
3. Confirm sorting and filtering functions work as expected
4. Validate responsive design on mobile, tablet, and desktop viewports
5. Check performance with large datasets

# Subtasks:
## 1. Extend tRPC Procedures to Fetch Related Entities [done]
### Dependencies: None
### Description: Update the tRPC backend procedures for `client.getById` and `audit.getById` to include all necessary related entities for the detail pages.
### Details:
Modify the tRPC router definitions so that `client.getById` returns contacts, licenses, trustAccounts, and audits, and `audit.getById` returns tasks and assignments with user information. Ensure the returned data is fully typed and optimized for frontend consumption.

## 2. Implement Tabbed Interface on Client Detail Page [done]
### Dependencies: 3.1
### Description: Create a tabbed navigation UI for the Client Detail page at `/clients/[clientId]` to organize related data into Overview, Contacts, Licenses, Trust Accounts, Audits, and Activity tabs.
### Details:
Use Shadcn/TailAdmin tab components to build a responsive tabbed interface. Each tab should be a separate component and fetch its data using the enhanced tRPC procedures.

## 3. Build Data Tables and Lists for Each Client Tab [done]
### Dependencies: 3.2
### Description: Develop tables or lists for each tab on the Client Detail page, supporting sorting and filtering where appropriate.
### Details:
For Contacts, Licenses, Trust Accounts, and Audits tabs, implement data tables using Shadcn/TailAdmin components. Add sorting and filtering controls as needed. Ensure data is fetched efficiently and displayed clearly.

## 4. Enhance Audit Detail Page with Relational Data [done]
### Dependencies: 3.1
### Description: Redesign the Audit Detail page at `/audits/[auditId]` to display core audit info, assigned team members, a tasks table, and an activity log.
### Details:
Use Shadcn/TailAdmin cards, badges, and tables to present audit details, team assignments (with user info), tasks, and activity logs. Ensure the layout is clear and information is grouped logically.

## 5. Apply Consistent UI Components and Styling [done]
### Dependencies: 3.3, 3.4
### Description: Standardize the use of Shadcn/TailAdmin components for cards, badges, and tables across both Client and Audit detail pages.
### Details:
Audit all UI elements on the detail pages to ensure consistent use of Shadcn/TailAdmin components. Refactor any legacy or inconsistent UI elements to match the new design system.

## 6. Ensure Responsive Design and Cross-Device Usability [done]
### Dependencies: 3.5
### Description: Test and refine the Client and Audit detail pages to ensure they are fully responsive and usable on all common screen sizes.
### Details:
Use responsive utilities from Shadcn/TailAdmin and test layouts on various devices. Adjust breakpoints, table layouts, and navigation as needed to guarantee a seamless user experience on desktop, tablet, and mobile.

