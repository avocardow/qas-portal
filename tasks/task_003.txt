# Task ID: 3
# Title: Create Client Manager and KPI Cards
# Status: pending
# Dependencies: 2
# Priority: high
# Description: Implement the Client Manager card and KPI cards (Lifetime Fees, YoY Growth, Health Score) at the top of the profile page.
# Details:
Create the Client Manager card displaying assigned team member with name, role, and contact info with a link to their profile. Implement KPI cards using ComponentCard with: 1) Lifetime Fees Card with total historical fees and sparkline trend, 2) YoY Growth Chart using TailAdmin chart component, 3) Customer Health Score with colored ribbon (green/yellow/red). Use useAbility() to gate sensitive financial data for Admin-only access.

# Test Strategy:
Verify all cards render correctly with proper data. Test permission gating for sensitive fields. Check that charts and visualizations display accurately. Test responsiveness at different screen sizes.

# Subtasks:
## 1. Create basic Card component structure [pending]
### Dependencies: None
### Description: Implement the reusable Card component that will serve as the foundation for both the Client Manager card and KPI cards
### Details:
Create a Card.jsx component with appropriate styling in Card.css. The component should accept props for title, content, and custom styling. Use a flexible structure with box-shadow, border-radius, and padding. Implement responsive design considerations to ensure cards display properly on different screen sizes. This component will be the building block for all cards in this task.

## 2. Implement Client Manager card component [pending]
### Dependencies: 3.1
### Description: Create the Client Manager card displaying the assigned team member's information
### Details:
Using the Card component as a base, create a ClientManagerCard component that displays the team member's name, role, and contact information. Add a profile image placeholder. Include a link to the team member's profile page. Style according to design specifications. The component should accept props for the team member's data (name, role, email, phone, profileUrl, imageUrl).

## 3. Implement Lifetime Fees KPI card with sparkline [pending]
### Dependencies: 3.1
### Description: Create the Lifetime Fees card showing total historical fees and a sparkline trend visualization
### Details:
Extend the Card component to create a LifetimeFeesCard that displays the total historical fees. Implement a sparkline visualization using a charting library (like Chart.js or D3.js) to show the trend over time. Include proper formatting for currency values. The component should accept props for the fee data (totalFees, feeHistory) where feeHistory is an array of data points for the sparkline.

## 4. Implement YoY Growth KPI card with chart [pending]
### Dependencies: 3.1
### Description: Create the Year-over-Year Growth card using the TailAdmin chart component
### Details:
Extend the Card component to create a YoYGrowthCard that integrates the TailAdmin chart component. Configure the chart to display year-over-year growth data. Include percentage indicators for growth/decline. The component should accept props for growth data (growthPercentage, growthHistory) where growthHistory contains the data points needed for the chart.

## 5. Implement Customer Health Score KPI card [pending]
### Dependencies: 3.1
### Description: Create the Customer Health Score card with colored status ribbon
### Details:
Extend the Card component to create a HealthScoreCard that displays the customer health score. Implement a colored ribbon that changes based on the score (green for good, yellow for moderate, red for poor). Include a visual indicator of the score (like a gauge or number). The component should accept props for the health data (score, status) where status determines the ribbon color.

## 6. Implement permission controls using useAbility hook [pending]
### Dependencies: 3.3, 3.4, 3.5
### Description: Add permission controls to gate sensitive financial data for Admin-only access
### Details:
Integrate the useAbility() hook to check user permissions before displaying sensitive financial data in the KPI cards. Implement conditional rendering that shows appropriate placeholders or messages for users without sufficient permissions. Create a wrapper component or higher-order component that applies these permission checks consistently across all KPI cards.

## 7. Integrate all cards into the profile page layout [pending]
### Dependencies: 3.2, 3.3, 3.4, 3.5, 3.6
### Description: Assemble all card components into the profile page layout with proper spacing and responsiveness
### Details:
Create a container component that arranges the Client Manager card and KPI cards at the top of the profile page. Implement responsive grid layout to ensure proper card arrangement on different screen sizes. Add loading states for when data is being fetched. Test the integration to ensure all cards display correctly and that permission controls work as expected. Finalize styling to ensure consistent appearance across all cards.

