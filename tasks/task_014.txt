# Task ID: 14
# Title: Implement Email Thread Panel
# Status: in-progress
# Dependencies: 2
# Priority: low
# Description: Embed the last 3 client email threads via Outlook/Gmail integration on the Client Profile page.
# Details:
Create an Email Thread Panel component that embeds the last 3 client email threads via Outlook/Gmail integration. Implement proper loading states and error handling for email fetching. Display email metadata (sender, recipients, date) and content in a clean, readable format.

# Test Strategy:
Test email thread display with various email formats. Verify loading states and error handling. Check email content rendering for correctness. Test with different email providers.

# Subtasks:
## 1. Integrate Outlook/Gmail APIs and Fetch Last 3 Client Email Threads [done]
### Dependencies: None
### Description: Set up secure integration with both Outlook and Gmail APIs to authenticate users and fetch the last 3 email threads involving the client. Ensure proper handling of API tokens and permissions.
### Details:
Implement OAuth2 authentication flows for both Outlook (Microsoft Graph API) and Gmail (Google API). After authentication, use the respective APIs to query and retrieve the most recent 3 email threads related to the client. Ensure the data includes full thread details, including message metadata and content. Handle API rate limits and errors gracefully, returning clear error messages or fallback states if fetching fails.

## 2. Design and Implement Email Thread Panel UI Component [done]
### Dependencies: 14.1
### Description: Create a reusable Email Thread Panel component that displays the fetched email threads in a clean, readable format, showing sender, recipients, date, and email content.
### Details:
Design the UI to present each thread as a collapsible or expandable section, showing the sequence of emails within the thread. Display metadata (sender, recipients, date) prominently for each message, and render the email body with proper formatting. Ensure the component is responsive and accessible. Use loading indicators while data is being fetched and placeholders for empty or error states.

## 3. Implement Loading States and Robust Error Handling [in-progress]
### Dependencies: 14.2
### Description: Enhance the Email Thread Panel to provide clear feedback during data fetching and handle errors gracefully, ensuring a smooth user experience.
### Details:
Add loading spinners or skeleton screens to indicate when email threads are being retrieved. Implement error boundaries to catch and display user-friendly error messages if fetching fails (e.g., network issues, authentication errors, or no threads found). Ensure the UI recovers gracefully from errors and allows retrying the fetch operation. Log errors for monitoring and debugging purposes.

