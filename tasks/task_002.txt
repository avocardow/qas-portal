# Task ID: 2
# Title: Implement Admin Shared Mailbox Access
# Status: pending
# Dependencies: 1
# Priority: medium
# Description: Extend the email integration to allow Admin users to access and manage the shared admin mailbox, with proper role-based access control.
# Details:
1. Extend tRPC `emailRouter` with shared mailbox procedures targeting `/users/{admin-email}/...` endpoints
2. Configure additional Graph API permissions: `Mail.ReadWrite.Shared`, `Mail.Send.Shared`
3. Implement RBAC to restrict shared mailbox access to Admin role only
4. Add mailbox switcher UI component (tabs or dropdown) visible only to Admins
5. Modify email components to use appropriate procedures based on selected mailbox
6. Ensure emails sent from shared mailbox are properly attributed

# Test Strategy:
1. Verify only Admin users can access shared mailbox functions
2. Test mailbox switching functionality preserves state appropriately
3. Confirm emails sent from shared mailbox show correct sender
4. Validate RBAC prevents unauthorized access attempts

# Subtasks:
## 1. Extend tRPC emailRouter with Shared Mailbox Procedures [pending]
### Dependencies: None
### Description: Add new procedures to the tRPC emailRouter to support operations (read, send, manage) on the shared admin mailbox, targeting endpoints like /users/{admin-email}/....
### Details:
Define procedures for accessing and managing the shared mailbox using Microsoft Graph API endpoints. Ensure these procedures can differentiate between personal and shared mailbox contexts, and structure them to support future extensibility.

## 2. Configure Microsoft Graph API Permissions for Shared Mailbox [pending]
### Dependencies: 2.1
### Description: Update the application's Microsoft Graph API permissions to include Mail.ReadWrite.Shared and Mail.Send.Shared, enabling programmatic access to shared mailboxes.
### Details:
Register or update the Azure AD app to request the necessary delegated permissions. Ensure admin consent is granted for these permissions, and verify that the app can access shared mailbox endpoints as intended.

## 3. Implement Role-Based Access Control (RBAC) for Shared Mailbox [pending]
### Dependencies: 2.1, 2.2
### Description: Restrict access to the shared admin mailbox procedures so only users with the Admin role can invoke them.
### Details:
Update the backend authorization logic to check user roles before allowing access to shared mailbox procedures. Ensure that only Admin users can see or interact with shared mailbox functionality, and add tests to validate RBAC enforcement.

## 4. Develop Mailbox Switcher UI Component for Admins [pending]
### Dependencies: 2.3
### Description: Create a UI component (tabs or dropdown) that allows Admin users to switch between their personal mailbox and the shared admin mailbox.
### Details:
Design and implement a mailbox switcher that is only visible to Admin users. Integrate it with the application's state management so that selecting a mailbox updates the context for all email operations.

## 5. Update Email Components for Shared Mailbox Context and Attribution [pending]
### Dependencies: 2.4
### Description: Modify email-related components to use the correct mailbox procedures based on the selected mailbox, and ensure emails sent from the shared mailbox are properly attributed.
### Details:
Refactor components to dynamically call the appropriate tRPC procedures depending on the active mailbox. Ensure that outgoing emails from the shared mailbox use the correct sender identity and are tracked as sent by the shared mailbox, not the individual Admin.

