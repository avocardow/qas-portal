# Task ID: 7
# Title: Implement Trust Accounts Table
# Status: pending
# Dependencies: 2
# Priority: medium
# Description: Build the Trust Accounts Table on the Client Profile page with all required fields and software access links.
# Details:
Create a DataTableTwo component for trust accounts with columns: Account Name, Bank Name, BSB, Account Number, Software Access badge, last reconciliation date, managementSoftware, and softwareUrl. Include action buttons linking to each account's management software or external feed (e.g., 'Open in Xero' or 'Open in SharePoint'). Follow DataTableTwo API docs from Context7.

# Test Strategy:
Test table with various trust account data. Verify external links open correctly. Check that all required fields display properly. Test responsive behavior on different screen sizes.

# Subtasks:
## 1. Set Up DataTableTwo Component Environment [pending]
### Dependencies: None
### Description: Install and configure all necessary dependencies for DataTableTwo, ensuring compatibility with the project and preparing for custom table implementation.
### Details:
Install required packages (e.g., datatables.net-react, datatables.net-dt) using npm or yarn. Import DataTableTwo and its dependencies into the project. Verify that the DataTableTwo API documentation from Context7 is accessible and understood. Set up a basic DataTableTwo instance in a test component to confirm correct installation and rendering.[1][5]

## 2. Define Trust Accounts Table Schema and Columns [pending]
### Dependencies: 7.1
### Description: Design the schema for the trust accounts table, specifying all required columns and their data types, and configure the DataTableTwo columns accordingly.
### Details:
Create a columns configuration for DataTableTwo including: Account Name, Bank Name, BSB, Account Number, Software Access badge, Last Reconciliation Date, managementSoftware, and softwareUrl. Ensure each column has appropriate headers, data accessors, and formatting as needed (e.g., date formatting for reconciliation date, badge styling for software access).

## 3. Integrate Data Source and Populate Table [pending]
### Dependencies: 7.2
### Description: Connect the DataTableTwo component to the trust accounts data source and ensure the table is populated with accurate, testable data.
### Details:
Fetch or mock trust account data containing all required fields. Map the data to the DataTableTwo schema. Ensure the table displays all records correctly and supports updates if needed. Use sample data for development if backend integration is not yet available.

## 4. Implement Software Access Badge and Action Buttons [pending]
### Dependencies: 7.3
### Description: Add a Software Access badge column and action buttons that link to each account's management software or external feed, such as 'Open in Xero' or 'Open in SharePoint'.
### Details:
Render a badge in the Software Access column based on the managementSoftware field. For each row, add an action button that dynamically generates a link using the softwareUrl field and displays the appropriate label (e.g., 'Open in Xero'). Ensure buttons are accessible and open links in a new tab or as required.

## 5. Apply Styling, Test, and Document the Component [pending]
### Dependencies: 7.4
### Description: Ensure the Trust Accounts Table matches design guidelines, is fully tested, and includes usage documentation.
### Details:
Apply consistent styling to match the application's theme, including badges and action buttons. Test the component for usability, accessibility, and responsiveness. Write clear documentation on how to use and extend the Trust Accounts Table, referencing the DataTableTwo API as needed.

